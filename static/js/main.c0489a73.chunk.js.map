{"version":3,"sources":["Loader.js","axios.js","request.js","Banner.js","Row.js","assets/calflix_logo.png","assets/calvin_icon.jpg","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","class","this","props","loader","onClick","handleChange","className","Component","instance","axios","create","baseURL","get","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","string","n","useState","movie","setMovie","useEffect","a","request","BannerList","data","results","Math","floor","random","length","fetchData","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","overview","substr","Row","fetchURL","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","alt","id","videoId","opts","height","width","playerVars","autoplay","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","logo","avatar","App","setState","state","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yTAmBeA,G,mLAbX,OACE,sBAAKC,MAAK,eAAUC,KAAKC,MAAMC,OAAS,OAAS,IAAjD,UACE,sBAAKH,MAAM,UAAUI,QAASH,KAAKC,MAAMG,aAAzC,UACE,yBACA,yBACA,4BAEF,oBAAIC,UAAU,YAAd,4B,GAVaC,c,sCCAfC,E,OAAWC,EAAMC,OAAO,CAC5BC,QAAS,iCAGXH,EAASI,MAEMJ,QCTTK,EAAU,mCAaDC,EAXE,CACfC,cAAc,8BAAD,OAAgCF,EAAhC,mBACbG,sBAAsB,wBAAD,OAA0BH,EAA1B,sBACrBI,cAAc,4BAAD,OAA8BJ,EAA9B,mBACbK,kBAAkB,2BAAD,OAA6BL,EAA7B,mBACjBM,kBAAkB,2BAAD,OAA6BN,EAA7B,mBACjBO,kBAAkB,2BAAD,OAA6BP,EAA7B,mBACjBQ,mBAAmB,2BAAD,OAA6BR,EAA7B,sBAClBS,mBAAmB,2BAAD,OAA6BT,EAA7B,oB,MCyCLU,MA5Cf,WAAmB,IAeCC,EAAQC,EAfV,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,KAmBhB,OAhBAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACyBrB,EAAMG,IAAImB,EAAQf,uBAD3C,cACQF,EADR,OAEMkB,EAAalB,EAASmB,KAAKC,QAC/BN,EACEI,EAAWG,KAAKC,MAAMD,KAAKE,UAAYL,EAAWM,OAAS,MAJ/D,kBAMSxB,GANT,4CADc,uBAAC,WAAD,wBASdyB,KACC,IAOD,wBACEjC,UAAU,SACVkC,MAAO,CACLC,eAAgB,QAChBC,gBAAgB,yEAAD,OA1BN,wCA0BM,cAAsFf,QAAtF,IAAsFA,OAAtF,EAAsFA,EAAOgB,cAA7F,KACfC,mBAAoB,iBALxB,SASE,sBAAKtC,UAAU,iBAAf,UAEE,oBAAIA,UAAU,eAAd,SAA8BqB,EAAMkB,OAASlB,EAAMmB,OAEnD,sBAAKxC,UAAU,iBAAf,UACE,wBAAQA,UAAU,gBAAlB,kBACA,wBAAQA,UAAU,gBAAlB,wBAGF,oBAAIA,UAAU,qBAAd,UAvBYkB,EAuBgC,OAACG,QAAD,IAACA,OAAD,EAACA,EAAOoB,SAvBhCtB,EAuB0C,KAtBrD,OAAND,QAAM,IAANA,OAAA,EAAAA,EAAQc,QAASb,EAAID,EAAOwB,OAAO,EAAGvB,EAAI,GAAK,MAAQD,W,iCC8CnDyB,MA5Df,YAA+C,IAAhCJ,EAA+B,EAA/BA,MAAOK,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,WAAc,EAChBzB,mBAAS,IADO,mBACrC0B,EADqC,KAC7BC,EAD6B,OAER3B,mBAAS,IAFD,mBAErC4B,EAFqC,KAEzBC,EAFyB,KAwC5C,OAnCA1B,qBAAU,WAAM,4CAEd,4BAAAC,EAAA,sEACwBrB,EAAMG,IAAIsC,GADlC,cACQnB,EADR,OAEEsB,EAAUtB,EAAQE,KAAKC,SAFzB,kBAGSH,GAHT,4CAFc,0DAOdQ,KACC,CAACW,IA4BF,sBAAK5C,UAAU,MAAf,UACE,6BAAKuC,IACL,qBAAKvC,UAAU,cAAf,SAEG8C,EAAOI,KAAI,SAAC7B,GAAD,OACV,qBAEErB,UAAS,qBAAgB6C,GAAc,oBACvC/C,QAAS,kBAzBC,SAACuB,GACf2B,EACFC,EAAc,IAEdE,IAAa9B,EAAMmB,MAAQnB,EAAMkB,OAAS,IACvCa,MAAK,SAAAC,GACJ,IAAMC,EAAY,IAAIC,gBAAgB,IAAIC,IAAIH,GAAKI,QAEnDR,EAAcK,EAAUhD,IAAI,SAE7BoD,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAcKG,CAAYzC,IAC3B0C,IAAG,UApDE,wCAoDF,OAAgBlB,EAAaxB,EAAM2C,YAAc3C,EAAMgB,eAC1D4B,IAAG,UAAK5C,EAAMkB,OAASlB,EAAMmB,KAA1B,YAJEnB,EAAM6C,SAQhBlB,GAAc,cAAC,IAAD,CAASmB,QAASnB,EAAYoB,KAxCpC,CACXC,OAAQ,MACRC,MAAO,OACPC,WAAY,CAEVC,SAAU,UC7BD,MAA0B,yCCA1B,MAA0B,wC,MC6B1BC,MAxBf,WAAmB,IAAD,EACWrD,oBAAS,GADpB,mBACTsD,EADS,KACHC,EADG,KAgBhB,OAbApD,qBAAU,WAQR,OAPAqD,OAAOC,iBAAiB,UAAU,WAC7BD,OAAOE,QAAU,IAClBH,GAAW,GAEXA,GAAW,MAGR,WACLC,OAAOG,oBAAoB,aAE5B,IAGD,sBAAK/E,UAAS,cAAS0E,GAAQ,aAA/B,UACE,qBAAK1E,UAAU,eAAe+D,IAAKiB,EAAMf,IAAI,iBAC7C,qBAAKjE,UAAU,cAAc+D,IAAKkB,EAAQhB,IAAI,kBCsBrCiB,E,kDApCb,aAAe,IAAD,8BACZ,gBAMFnF,aAAe,WACb,EAAKoF,SAAS,CACZtF,QAAQ,KAPV,EAAKuF,MAAQ,CACXvF,QAAQ,GAHE,E,qDAcZ,OACE,sBAAKG,UAAU,MAAf,UACE,cAAC,EAAD,CAAQH,OAAQF,KAAKyF,MAAMvF,OAAQE,aAAcJ,KAAKI,eACtD,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACAwC,MAAM,oBACNK,SAAUnB,EAAQf,sBAClBmC,YAAY,IAEd,cAAC,EAAD,CAAKN,MAAM,eAAeK,SAAUnB,EAAQhB,gBAC5C,cAAC,EAAD,CAAK8B,MAAM,YAAYK,SAAUnB,EAAQd,gBACzC,cAAC,EAAD,CAAK4B,MAAM,gBAAgBK,SAAUnB,EAAQb,oBAC7C,cAAC,EAAD,CAAK2B,MAAM,gBAAgBK,SAAUnB,EAAQZ,oBAC7C,cAAC,EAAD,CAAK0B,MAAM,gBAAgBK,SAAUnB,EAAQX,oBAC7C,cAAC,EAAD,CAAKyB,MAAM,iBAAiBK,SAAUnB,EAAQV,qBAC9C,cAAC,EAAD,CAAKwB,MAAM,gBAAgBK,SAAUnB,EAAQT,4B,GAhCjCf,aCIHoF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c0489a73.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport './Loader.css';\r\n\r\nclass Loader extends Component {\r\n\r\n  render() { \r\n    return (\r\n      <div class={`logo ${this.props.loader ? 'hide' : ''}`}>\r\n        <div class=\"calflix\" onClick={this.props.handleChange}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n        <h3 className=\"logo-text\">Calflix</h3>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import axios from 'axios';\r\n\r\n// base url to make requests to the movie db\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\ninstance.get()\r\n\r\nexport default instance;","const API_KEY = '27e7527232fb21c9f64b28fea9cfe7fc';\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`\r\n}\r\n\r\nexport default requests;","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios.js';\r\nimport request from './request.js';\r\nimport './Banner.css';\r\n\r\nconst base_URL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const requests = await axios.get(request.fetchNetflixOriginals);\r\n      let BannerList = requests.data.results;\r\n      setMovie(\r\n        BannerList[Math.floor(Math.random() * (BannerList.length - 1))]\r\n      );\r\n      return requests;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n  \r\n  return (\r\n    <header \r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `linear-gradient(180deg, transparent, rgba(37, 37, 37, .6), #111), url(${base_URL}${movie?.backdrop_path})`,\r\n        backgroundPosition: \"center center\"\r\n      }}\r\n    >\r\n      {/* {background image} */}\r\n      <div className=\"banner-content\">\r\n      {/* {title} */}\r\n        <h2 className=\"banner-title\">{movie.title || movie.name}</h2>\r\n      {/* {div > 2 buttons} */}\r\n        <div className=\"banner-buttons\">\r\n          <button className=\"banner-button\">Play</button>\r\n          <button className=\"banner-button\">My List</button>\r\n        </div>\r\n      {/* {description} */}\r\n        <h3 className=\"banner-description\">{truncate(movie?.overview, 150)}</h3>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from './axios.js';\r\nimport './Row.css';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n// poster base URL\r\nconst base_URL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchURL, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  // A snippet of code which runs based on a specific condition/variable\r\n  useEffect(() => {\r\n    // if [], run once when the row loads and don't run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchURL);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    };\r\n    fetchData();\r\n  }, [fetchURL]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    }\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl('');\r\n    } else {\r\n      movieTrailer(movie.name || movie.title || \"\")\r\n        .then(url => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          // https://www.youtube.com/watch?v=thisIsTheEndPoint so get the 'v'\r\n          setTrailerUrl(urlParams.get('v'));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row-posters\">\r\n        {/* Row posters */}\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            className={`row-poster ${isLargeRow && \"row-poster-large\"}`}\r\n            onClick={() => handleClick(movie)}\r\n            src={`${base_URL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n            alt={`${movie.title || movie.name} poster`}>\r\n          </img>\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","export default __webpack_public_path__ + \"static/media/calflix_logo.33751707.png\";","export default __webpack_public_path__ + \"static/media/calvin_icon.fe61c786.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport logo from './assets/calflix_logo.png';\r\nimport avatar from './assets/calvin_icon.jpg';\r\nimport './Navbar.css';\r\n\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if(window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else {\r\n        handleShow(false);\r\n      };\r\n    });\r\n    return () => {\r\n      window.removeEventListener('scroll');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav-black\"}`}>\r\n      <img className=\"calflix-logo\" src={logo} alt=\"Calflix Logo\"></img>\r\n      <img className=\"calvin-icon\" src={avatar} alt=\"User Icon\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Loader from './Loader.js';\nimport Banner from './Banner.js';\nimport Row from './Row.js';\nimport Navbar from './Navbar'\nimport request from './request.js';\n\nclass App extends Component {\n  \n  constructor() {\n    super();\n    this.state = {\n      loader: false\n    };\n  }\n\n  handleChange = () => {\n    this.setState({ \n      loader: true\n    });\n  };\n\n  render() { \n    return (\n      <div className=\"app\">\n        <Loader loader={this.state.loader} handleChange={this.handleChange}/>\n        <Navbar />\n        <Banner />\n        <Row \n        title=\"Netflix Originals\" \n        fetchURL={request.fetchNetflixOriginals}\n        isLargeRow={true}\n      />\n      <Row title=\"Trending Now\" fetchURL={request.fetchTrending} />\n      <Row title=\"Top Rated\" fetchURL={request.fetchTopRated} />\n      <Row title=\"Action Movies\" fetchURL={request.fetchActionMovies} />\n      <Row title=\"Comedy Movies\" fetchURL={request.fetchComedyMovies} />\n      <Row title=\"Horror Movies\" fetchURL={request.fetchHorrorMovies} />\n      <Row title=\"Romance Movies\" fetchURL={request.fetchRomanceMovies} />\n      <Row title=\"Documentaries\" fetchURL={request.fetchDocumentaries} />\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}