[{"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\index.js":"1","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\reportWebVitals.js":"2","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\App.js":"3","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\Row.js":"4","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\request.js":"5","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\axios.js":"6","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\Banner.js":"7","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\Navbar.js":"8","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\Loader.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":1286,"mtime":1610164153186,"results":"13","hashOfConfig":"11"},{"size":2331,"mtime":1610170808596,"results":"14","hashOfConfig":"11"},{"size":708,"mtime":1610066658808,"results":"15","hashOfConfig":"11"},{"size":202,"mtime":1610120248360,"results":"16","hashOfConfig":"11"},{"size":1644,"mtime":1610165623786,"results":"17","hashOfConfig":"11"},{"size":773,"mtime":1610135190820,"results":"18","hashOfConfig":"11"},{"size":449,"mtime":1610153953498,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1t8inve",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\index.js",[],["40","41"],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\reportWebVitals.js",[],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\App.js",[],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\Row.js",["42"],"import React, { useState, useEffect, Fragment } from 'react';\r\nimport axios from './axios.js';\r\nimport './Row.css';\r\nimport Youtube from 'react-youtube';\r\nimport movieTrailer from 'movie-trailer';\r\n\r\n// poster base URL\r\nconst base_URL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchURL, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  // A snippet of code which runs based on a specific condition/variable\r\n  useEffect(() => {\r\n    // if [], run once when the row loads and don't run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchURL);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    };\r\n    fetchData();\r\n  }, [fetchURL]);\r\n\r\n  const opts = {\r\n    height: \"500\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    }\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    console.log(movie);\r\n    if (trailerUrl) {\r\n      setTrailerUrl('');\r\n    } else {\r\n      movieTrailer(movie?.name || movie?.title || \"\")\r\n        .then(url => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          // https://www.youtube.com/watch?v=thisIsTheEndPoint so get the 'v'\r\n          setTrailerUrl(urlParams.get('v'));\r\n        })\r\n        .catch((error) => {\r\n          console.log(error)\r\n        })\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2 className=\"row-title\">{title}</h2>\r\n      <div className=\"row-posters\">\r\n        {/* Row posters */}\r\n        {movies.map((movie) => (\r\n          <div \r\n            className=\"contenti\"\r\n            onClick={() => handleClick(movie)}\r\n          >\r\n            <img\r\n              key={movie.id}\r\n              className={`row-poster ${isLargeRow && \"row-poster-large\"}`}\r\n              src={`${base_URL}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} \r\n              alt={`${movie.title || movie.name} poster`}\r\n            >\r\n            </img>\r\n            <div className=\"mask\"></div>\r\n            <p className=\"movie-title\">{movie.title || movie.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <Youtube videoId={trailerUrl} opts={opts}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\request.js",[],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\axios.js",[],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\Banner.js",[],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\Navbar.js",[],"C:\\Users\\calvi\\OneDrive\\Documents\\sites\\github\\calflix\\src\\Loader.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":1,"column":38,"nodeType":"49","messageId":"50","endLine":1,"endColumn":46},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'Fragment' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]